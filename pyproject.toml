[project]
name = "venice-sdk"
version = "0.2.0"
description = "Comprehensive Python SDK for Venice AI - Advanced LLM, Image Generation, Audio Synthesis, and AI Assistant APIs with Full Swagger Specification Support"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Dual License: GNU Affero General Public License v3.0 and Creative Commons Attribution-ShareAlike 4.0 International"}
authors = [
    { name = "Mark Rizzn Hopkins", email = "guesswho@rizzn.com" }
]
keywords = [
    "venice-ai", "ai", "llm", "chatgpt", "openai", "artificial-intelligence", "machine-learning",
    "text-generation", "image-generation", "audio-synthesis", "text-to-speech", "embeddings",
    "vector-search", "semantic-search", "function-calling", "streaming", "api-client", "sdk",
    "python", "ai-assistant", "chatbot", "dall-e", "whisper", "gpt", "llama", "claude",
    "swagger", "openapi", "rest-api", "http-client", "async", "pagination", "rate-limiting",
    "error-handling", "type-hints", "documentation", "examples", "tutorials", "production-ready"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business",
    "Topic :: Education",
    "Topic :: Games/Entertainment",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment"
]
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.5.0",
    "tiktoken>=0.5.0",
    "psutil>=5.9.0"
]

[project.urls]
Homepage = "https://github.com/venice-ai/venice-sdk"
Documentation = "https://github.com/venice-ai/venice-sdk#readme"
Repository = "https://github.com/venice-ai/venice-sdk.git"
Issues = "https://github.com/venice-ai/venice-sdk/issues"
Changelog = "https://github.com/venice-ai/venice-sdk/blob/main/CHANGELOG.md"

[project.scripts]
venice = "venice_sdk.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests>=2.31.0.0"
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings>=0.22.0"
]
publish = [
    "twine>=4.0.0",
    "build>=0.10.0"
]

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=venice_sdk --cov-report=term-missing"
markers = [
    "live: marks tests as live tests that make real API calls",
    "e2e: marks tests as end-to-end tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
] 